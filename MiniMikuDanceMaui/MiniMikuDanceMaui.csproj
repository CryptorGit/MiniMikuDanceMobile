<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
                <!-- デフォルトでは Android のみを対象。EnableiOS=true を指定した場合は iOS も含める -->
                <TargetFrameworks>net9.0-android35.0</TargetFrameworks>
                <TargetFrameworks Condition="'$(EnableiOS)' == 'true'">net9.0-android35.0;net9.0-ios17.0</TargetFrameworks>

		<!-- MAUI シングルプロジェクト有効化 -->
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<OutputType>Exe</OutputType>

		<!-- Windows パッケージを無効化 -->
		<WindowsPackageType>None</WindowsPackageType>

		<!-- 暗黙参照の警告抑制など（任意） -->
		<SkipValidateMauiImplicitPackageReferences>true</SkipValidateMauiImplicitPackageReferences>
                <ImplicitUsings>enable</ImplicitUsings>
                <Nullable>enable</Nullable>
                <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
                <MauiEnableXamlCBindingWithSourceCompilation>true</MauiEnableXamlCBindingWithSourceCompilation>
        </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\AppCore\AppCore.csproj" />
  </ItemGroup>
    <ItemGroup>
      <PackageReference Include="AathifMahir.Maui.MauiIcons.Material" Version="4.0.0" />
      <PackageReference Include="AathifMahir.Maui.MauiIcons.Material.Outlined" Version="4.0.0" />
      <PackageReference Include="Microsoft.Maui.Controls" Version="9.0.90" />
      <PackageReference Include="SharpBgfx" Version="1.0.0" />
      <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" Version="9.0.0">
        <PrivateAssets>all</PrivateAssets>
        <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      </PackageReference>
    </ItemGroup>
  <PropertyGroup>
    <ShadercPath>$(BGFX_SHADERC)</ShadercPath>
    <ShadercPath Condition="'$(ShadercPath)' == ''">shaderc</ShadercPath>
    <ShadercIncludePath>$(BGFX_SHADER_INCLUDE)</ShadercIncludePath>
    <ShadercIncludePath Condition="'$(ShadercIncludePath)' == ''">.</ShadercIncludePath>
  </PropertyGroup>
  <Target Name="CheckShaderc">
    <Exec Command="sh -c 'command -v &quot;$(ShadercPath)&quot;'" IgnoreExitCode="true" Condition="'$(OS)' != 'Windows_NT'">
      <Output TaskParameter="ExitCode" PropertyName="ShadercFound" />
      <Output TaskParameter="ConsoleOutput" PropertyName="ShadercResolvedPath" />
    </Exec>
    <Exec Command="where $(ShadercPath)" IgnoreExitCode="true" Condition="'$(OS)' == 'Windows_NT'">
      <Output TaskParameter="ExitCode" PropertyName="ShadercFound" />
      <Output TaskParameter="ConsoleOutput" PropertyName="ShadercResolvedPath" />
    </Exec>
  </Target>
  <Target Name="CompileShaders" BeforeTargets="BeforeBuild" DependsOnTargets="CheckShaderc">
    <Message Importance="high" Text="Compiling BGFX shaders with $(ShadercPath)" Condition="'$(ShadercFound)' == '0'" />
    <Exec Command="&quot;$(ShadercPath)&quot; -f Resources/Shaders/simple.vs -i $(ShadercIncludePath) --varyingdef Resources/Shaders/varying.def.sc -o Resources/Shaders/simple.vs.gles2.sc --platform android --profile 100_es --type vertex" Condition="'$(ShadercFound)' == '0'" />
    <Exec Command="&quot;$(ShadercPath)&quot; -f Resources/Shaders/simple.vs -i $(ShadercIncludePath) --varyingdef Resources/Shaders/varying.def.sc -o Resources/Shaders/simple.vs.gles3.sc --platform android --profile 300_es --type vertex" Condition="'$(ShadercFound)' == '0'" />
    <Exec Command="&quot;$(ShadercPath)&quot; -f Resources/Shaders/simple.vs -i $(ShadercIncludePath) --varyingdef Resources/Shaders/varying.def.sc -o Resources/Shaders/simple.vs.metal.sc --platform osx --profile metal --type vertex" Condition="'$(ShadercFound)' == '0'" />
    <Exec Command="&quot;$(ShadercPath)&quot; -f Resources/Shaders/simple.fs -i $(ShadercIncludePath) --varyingdef Resources/Shaders/varying.def.sc -o Resources/Shaders/simple.fs.gles2.sc --platform android --profile 100_es --type fragment" Condition="'$(ShadercFound)' == '0'" />
    <Exec Command="&quot;$(ShadercPath)&quot; -f Resources/Shaders/simple.fs -i $(ShadercIncludePath) --varyingdef Resources/Shaders/varying.def.sc -o Resources/Shaders/simple.fs.gles3.sc --platform android --profile 300_es --type fragment" Condition="'$(ShadercFound)' == '0'" />
    <Exec Command="&quot;$(ShadercPath)&quot; -f Resources/Shaders/simple.fs -i $(ShadercIncludePath) --varyingdef Resources/Shaders/varying.def.sc -o Resources/Shaders/simple.fs.metal.sc --platform osx --profile metal --type fragment" Condition="'$(ShadercFound)' == '0'" />
    <Exec Command="&quot;$(ShadercPath)&quot; -f Resources/Shaders/pmx.vs -i $(ShadercIncludePath) --varyingdef Resources/Shaders/varying.def.sc -o Resources/Shaders/pmx.vs.gles2.sc --platform android --profile 100_es --type vertex" Condition="'$(ShadercFound)' == '0'" />
    <Exec Command="&quot;$(ShadercPath)&quot; -f Resources/Shaders/pmx.vs -i $(ShadercIncludePath) --varyingdef Resources/Shaders/varying.def.sc -o Resources/Shaders/pmx.vs.gles3.sc --platform android --profile 300_es --type vertex" Condition="'$(ShadercFound)' == '0'" />
    <Exec Command="&quot;$(ShadercPath)&quot; -f Resources/Shaders/pmx.vs -i $(ShadercIncludePath) --varyingdef Resources/Shaders/varying.def.sc -o Resources/Shaders/pmx.vs.metal.sc --platform osx --profile metal --type vertex" Condition="'$(ShadercFound)' == '0'" />
    <Exec Command="&quot;$(ShadercPath)&quot; -f Resources/Shaders/pmx.fs -i $(ShadercIncludePath) --varyingdef Resources/Shaders/varying.def.sc -o Resources/Shaders/pmx.fs.gles2.sc --platform android --profile 100_es --type fragment" Condition="'$(ShadercFound)' == '0'" />
    <Exec Command="&quot;$(ShadercPath)&quot; -f Resources/Shaders/pmx.fs -i $(ShadercIncludePath) --varyingdef Resources/Shaders/varying.def.sc -o Resources/Shaders/pmx.fs.gles3.sc --platform android --profile 300_es --type fragment" Condition="'$(ShadercFound)' == '0'" />
    <Exec Command="&quot;$(ShadercPath)&quot; -f Resources/Shaders/pmx.fs -i $(ShadercIncludePath) --varyingdef Resources/Shaders/varying.def.sc -o Resources/Shaders/pmx.fs.metal.sc --platform osx --profile metal --type fragment" Condition="'$(ShadercFound)' == '0'" />
    <Warning Text="shaderc not found: $(ShadercPath); skipping shader compilation." Condition="'$(ShadercFound)' != '0'" />
    <ItemGroup>
      <EmbeddedResource Include="Resources/Shaders/simple.*.sc" />
      <EmbeddedResource Include="Resources/Shaders/pmx.*.sc" />
    </ItemGroup>
  </Target>
  <ItemGroup>
    <!-- 追加のアセットが必要な場合はここに記述します -->
  </ItemGroup>

  <ItemGroup>
      <MauiAsset Include="..\Configs\BonesConfig.json">
        <Link>Configs\BonesConfig.json</Link>
      </MauiAsset>
      <MauiAsset Include="..\Configs\UIConfig.json">
        <Link>Configs\UIConfig.json</Link>
      </MauiAsset>
    </ItemGroup>
  </Project>
