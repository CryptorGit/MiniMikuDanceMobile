syntax = "proto2";

import "common.proto";

package nanoem.application.plugin;

message AudioDescription {
  required uint32 bits_per_sample = 1;
  required uint32 num_channels = 2;
  required uint32 sample_rate = 3;
  required float volume_gain = 4;
  required nanoem.common.Rational current_offset = 5;
  required nanoem.common.Rational duration = 6;
};

message CameraDescription {
  required nanoem.common.Vector4 look_at = 1;
  required nanoem.common.Vector4 angle = 2;
  required float distance = 3;
  required float fov = 4;
  required bool is_perspective = 5;
};

message LightDescription {
  required nanoem.common.Vector4 color = 1;
  required nanoem.common.Vector4 direction = 2;
};

message UIComponent {
  enum DataType {
    S8 = 1;
    U8 = 2;
    S16= 3;
    U16 = 4;
    S32= 5;
    U32 = 6;
    S64 = 7;
    U64 = 8;
    FLOAT = 9;
    DOUBLE = 10;
  };
  message Label {
    required string text = 1;
    optional fixed32 color = 2;
  };
  message Selectable {
    required string id = 1;
    required string text = 2;
  };
  message Button {
    required string id = 1;
    required string text = 2;
  };
  message CheckBox {
    required string id = 1;
    required string text = 2;
    required bool value = 3;
  };
  message RadioButton {
    required string id = 1;
    required string text = 2;
    required bool active = 3;
  };
  message ComboBox {
    required string id = 1;
    required string text = 2;
    required uint32 selected_index = 3;
    repeated Selectable selectables = 4;
  };
  message DragScalarN {
    required DataType data_type = 1;
    required int32 num_components = 2;
    required float speed = 3;
    required string id = 4;
    required string text = 5;
    required bytes value = 6;
    optional float power = 7;
    optional bytes min = 8;
    optional bytes max = 9;
    optional string format = 10;
  };
  message SliderScalarN {
    required DataType data_type = 1;
    required int32 num_components = 2;
    required string id = 3;
    required string text = 4;
    required bytes value = 5;
    optional bytes min = 6;
    optional bytes max = 7;
    optional string format = 8;
    optional float power = 9;
  };
  message InputScalarN {
    required DataType data_type = 1;
    required int32 num_components = 2;
    required string id = 3;
    required string text = 4;
    required bytes value = 5;
    optional bytes step = 6;
    optional bytes step_fast = 7;
    optional string format = 8;
  };
  message Separator {
  };
  message SameLine {
    optional float offset_from_start_x = 1;
    optional float spacing_w = 2;
  };
  message ChildWindow {
    required string id = 1;
    repeated UIComponent components = 2;
    optional float width = 3;
    optional float height = 4;
    optional bool border = 5;
    optional uint32 flags = 6;
  };
  message Dummy {
    optional float width = 1;
    optional float height = 2;
  };
  message Tree {
    required string id = 1;
    repeated UIComponent components = 2;
  };
  message Canvas {
    message DrawCommand {
    };
    repeated DrawCommand commands = 1;
  };
  oneof type {
    Separator separator = 1;
    Label label = 2;
    Button button = 3;
    CheckBox check_box = 4;
    RadioButton radio_button = 5;
    Selectable selectable = 6;
    ComboBox combo_box = 7;
    DragScalarN drag_scalar_n = 8;
    SliderScalarN slider_scalar_n = 9;
    InputScalarN input_scalar_n = 10;
    SameLine same_line = 11;
    ChildWindow child_window = 12;
    Dummy dummy = 13;
    Tree tree = 14;
    Canvas canvas = 15;
  };
};

message UIWindow {
  required string id = 1;
  optional string title = 2;
  repeated UIComponent items = 3;
};
